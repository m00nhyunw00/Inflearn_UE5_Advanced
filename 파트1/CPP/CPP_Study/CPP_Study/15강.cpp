#include <iostream>
using namespace std;

// 변수 선언 방법
// [타입] [이름];
// [타입] [이름] = [초기값];

// 0이 아닌 초기값이 있으면 .data 영역
int hp = 100;

// 초기값이 0이거나 초기값이 없다면 .bss 영역

char a;			// 1바이트 (-128 ~ 127)
short b;		// 2바이트 (-32,768 ~ 32,767)
int c;			// 4바이트 (-21.4억 ~ 21.4억), 가장 일반적인 정수형
__int64 d;		// 8바이트 (-9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807)
long long d2;	// 8바이트, __int64와 동일한 키워드

unsigned char ua;		// 1바이트 (0 ~ 255)
unsigned short ub;		// 2바이트 (0 ~ 65,535)
unsigned int uc;		// 4바이트 (0 ~ 42.9억)
unsigned __int64 ud;	// 8바이트 (0 ~ 18,446,744,073,709,551,615)
unsigned long long ud2;	// 8바이트

// 참고) 이론적으로 양수만 존재할 숭 ㅣㅆ는 데이터 unsinged
// 무조건 unsigned를 사용할지에 대해서는 의견이 갈림
// - 1. 레벨이 음수라는 것은 말이 안된다 -> 그럼 차라리 그 자리에서 프로그램을 크래시 내서 버그를 빨리 찾는게 낫다.
// - 2. unsinged/signed 사이의 변환에서 버그가 발생할 수 있다.

// 귀찮은데 그냥 대충 4바이트로 가면 안될까?
// -> 콘솔/모바일 게임 -> 메모리가 늘 부족하다.
// -> 온라인 게임 -> 4바이트 * 1만명

int main()
{
	cout << "체력이 " << hp << "입니다." << std::endl;

	b = 32767;
	b = b + 1;
	cout << "b의 값은 " << b << "입니다." << std::endl;	// 정수 오버플로우 발생
	// 반대로 최솟값보다 작은 값을 넣으면 언더플로우 발생

	return 0;	
}